spring.datasource.url=jdbc:h2:file:./auth_db
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=auth
spring.datasource.password=auth

spring.sql.init.platform=h2
spring.sql.init.mode=always

server.port=8000
server.error.include-message=always



application.security.allowed-origins=http://localhost:4200,http://localhost:3000,http://localhost:8080
application.security.access-token-secret=very_long_and_secure_and_safe_access_key
application.security.refresh-token-secret=very_long_and_secure_and_safe_refresh_key
application.frontend-default-url=http://localhost:4200

application.security.access-token-validity=20
application.security.refresh-token-validity=10080
application.security.google-client-id=794115904748-pvvn2gbc4vo2tq2s1rkag91tnqq6qjsu

spring.mail.host=0.0.0.0
spring.mail.port=1025
#spring.mail.protocol=smtp
#spring.mail.username=${GOOGLE_MAIL_USERNAME}
#spring.mail.password=${GOOGLE_MAIL_PASSWORD}
#spring.mail.test-connection=true
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.debug=true



# 실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true

# 콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true

# 쿼리에 물음표로 출력되는 바인드 파리미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace

# SpringBoot Devtools를 통해 새로고침 만으로 resources 밑의 파일들의 실시간 반영을 할 수 있다.
spring.devtools.livereload.enabled=true









